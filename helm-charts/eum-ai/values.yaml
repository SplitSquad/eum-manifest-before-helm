# Default values for eum-ai.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Global settings
global:
  namespace: eum-ai
  imageRegistry: 879657431997.dkr.ecr.ap-northeast-2.amazonaws.com

# Namespace configuration
namespace:
  create: true
  name: eum-ai
  labels:
    name: eum-ai

# Services configuration
services:
  discussionRoom:
    enabled: true
    name: discussion-room
    image:
      repository: eum-debate-room
      tag: e7ff89790ec319f535fe0ab3322da432951fba65
      pullPolicy: IfNotPresent
    port: 8000
    replicas: 1
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    env:
      APP_NAME: "discussion-room"
      PORT: "8000"
      EUREKA_URL: "http://discovery.eum-backend.svc.cluster.local:8761/eureka"
      EUREKA_IP: "http://discovery.eum-backend.svc.cluster.local:8761/eureka"
      EUREKA_APP_NAME: "discussion-room"
      EUREKA_HOST: "discussion-room.eum-ai.svc.cluster.local"
      EUREKA_PORT: "8000"
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
      LIGHTWEIGHT_LLM_PROVIDER: "groq"
      HIGH_PERFORMANCE_LLM_PROVIDER: "groq"
      LIGHTWEIGHT_OLLAMA_URL: "http://ollama-service:11434"
      LIGHTWEIGHT_OLLAMA_MODEL: "gemma3:1b"
      LIGHTWEIGHT_OLLAMA_TIMEOUT: "20"
      HIGH_PERFORMANCE_OLLAMA_URL: "http://ollama-service:11434"
      HIGH_PERFORMANCE_OLLAMA_MODEL: "gemma3:1b"
      HIGH_PERFORMANCE_OLLAMA_TIMEOUT: "60"
      LIGHTWEIGHT_OPENAI_MODEL: "gpt-3.5-turbo"
      LIGHTWEIGHT_OPENAI_TIMEOUT: "30"
      HIGH_PERFORMANCE_OPENAI_MODEL: "gpt-4-turbo"
      HIGH_PERFORMANCE_OPENAI_TIMEOUT: "60"
      GROQ_LIGHTWEIGHT_MODEL: "gemma2-9b-it"
      GROQ_HIGHPERFORMANCE_MODEL: "gemma2-9b-it"
      S3_REGION: "ap-northeast-2"
      S3_BUCKET_NAME: "eum-msa-bucket"
      PYTHONPATH: "${PYTHONPATH}:."
    secrets:
      GROQ_API_KEY: ""
      OPENAI_API_KEY: ""
      LIGHTWEIGHT_OPENAI_API_KEY: ""
      HIGH_PERFORMANCE_OPENAI_API_KEY: ""
      S3_ACCESS_KEY: ""
      S3_SECRET_KEY: ""

  classifier:
    enabled: true
    name: classifier
    image:
      repository: eum-classifier
      tag: latest
      pullPolicy: IfNotPresent
    port: 8000
    replicas: 1
    resources:
      requests:
        memory: "256Mi"
        cpu: "125m"
      limits:
        memory: "512Mi"
        cpu: "250m"
    env:
      APP_NAME: "classifier"
      PORT: "8000"
    secrets: {}

  agentic:
    enabled: true
    name: agentic
    image:
      repository: eum-agentic
      tag: latest
      pullPolicy: IfNotPresent
    port: 8000
    replicas: 1
    resources:
      requests:
        memory: "256Mi"
        cpu: "125m"
      limits:
        memory: "512Mi"
        cpu: "250m"
    env:
      APP_NAME: "agentic"
      PORT: "8000"
    secrets: {}

  chatbot:
    enabled: true
    name: chatbot
    image:
      repository: eum-chatbot
      tag: latest
      pullPolicy: IfNotPresent
    port: 8000
    replicas: 1
    resources:
      requests:
        memory: "256Mi"
        cpu: "125m"
      limits:
        memory: "512Mi"
        cpu: "250m"
    env:
      APP_NAME: "chatbot"
      PORT: "8000"
    secrets: {}

# Service configuration
service:
  type: ClusterIP
  port: 8000

# Sealed Secrets configuration (for existing sealed secrets)
sealedSecrets:
  enabled: true
