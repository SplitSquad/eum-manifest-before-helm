# Default values for eum-ai.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Global settings
global:
  namespace: eum-ai-helm
  imageRegistry: 879657431997.dkr.ecr.ap-northeast-2.amazonaws.com

# Namespace configuration
namespace:
  create: true
  name: eum-ai-helm
  labels:
    name: eum-ai-helm

# Services configuration
services:
  discussionRoom:
    enabled: true
    name: discussion-room
    image:
      repository: eum-debate-room
      tag: e7ff89790ec319f535fe0ab3322da432951fba65
      pullPolicy: IfNotPresent
    port: 8000
    replicas: 1
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    env:
      APP_NAME: "discussion-room"
      PORT: "8000"
      EUREKA_URL: "http://discovery.eum-backend.svc.cluster.local:8761/eureka"
      EUREKA_IP: "http://discovery.eum-backend.svc.cluster.local:8761/eureka"
      EUREKA_APP_NAME: "discussion-room"
      EUREKA_HOST: "discussion-room.eum-ai-helm.svc.cluster.local"
      EUREKA_PORT: "8000"
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
      LIGHTWEIGHT_LLM_PROVIDER: "groq"
      HIGH_PERFORMANCE_LLM_PROVIDER: "groq"
      LIGHTWEIGHT_OLLAMA_URL: "http://ollama-service:11434"
      LIGHTWEIGHT_OLLAMA_MODEL: "gemma3:1b"
      LIGHTWEIGHT_OLLAMA_TIMEOUT: "20"
      HIGH_PERFORMANCE_OLLAMA_URL: "http://ollama-service:11434"
      HIGH_PERFORMANCE_OLLAMA_MODEL: "gemma3:1b"
      HIGH_PERFORMANCE_OLLAMA_TIMEOUT: "60"
      LIGHTWEIGHT_OPENAI_MODEL: "gpt-3.5-turbo"
      LIGHTWEIGHT_OPENAI_TIMEOUT: "30"
      HIGH_PERFORMANCE_OPENAI_MODEL: "gpt-4-turbo"
      HIGH_PERFORMANCE_OPENAI_TIMEOUT: "60"
      GROQ_LIGHTWEIGHT_MODEL: "gemma2-9b-it"
      GROQ_HIGHPERFORMANCE_MODEL: "gemma2-9b-it"
      S3_REGION: "ap-northeast-2"
      S3_BUCKET_NAME: "eum-msa-bucket"
      PYTHONPATH: "${PYTHONPATH}:."
    secrets: {}
    sealedSecrets:
      GROQ_API_KEY: "AgAkZE9G+z2g7HNsOeCB9/81VfmoZTrXE1geL3Fh0J4plnt7xovKe+ByY23q9ScjhLJBbW5IriTbyBwA3HEEEkp9fQjDD9LANOs9927RImbF2gGJlvvbsB/JxGbZsmvwngJUAhaaIEgglAaFtOhJtxQQ+yGQN3QU1eyfthIu2fRTCHwi4PJGY4Z5VZ+b4fL8sztNxysbQkeklqkm8aFf6VdBWjK1/ViklODlJq3IhxDDM45pFVV6IttmZK3JSCuW8Ri/4/qQoV1XY6pi6zec1EsShUh4gmawOyrdxxx788WAd7pfeWxUUvKFLIsEbeRTQBqB65A5ngjKODaF3c02z+woxTdf5HJAnq7L8hvDsG/rgsqcXnbreEOpz1rxmfpRGsioynyLCMv9lZL8iPol3MwR54iZNAWjhvMLDhQUU3inQxFaHmNiUitbmMP5GS/Ou9Xd8GPEX56RCMlZXxeVOcW1Zig8DymP/EQRPAh+rJS3niveXeKQEdj5g00Kqr4CiS5RpYPrYjcz5DM9LgM387wUUmYW8KA0nVbGWmfw5NWUGEx9u705jNaQM74h27Gnr8rnKoPvj8xtPLeBxKwpn5naYlpwhDqne7KLHow2RyW8lRxe+tM9IkyZ5uVxQsJV4LKckyN2lieF4SCnzzJ6zuHozg47aiYYkMhdWmu/mb/zJyicewuS8skQgnUBgECr6R5aLxaO55nNWiFKiE0ltlWUwNOUGPe0Tkbxzs7h9117oIDYdw0yKXlF0hBHi9H91SuaT6AZAMKRdQ=="
      OPENAI_API_KEY: "AgB4cyff4LAqO5WI5qkKlE+tzngaQwmO3Q5MQlEm10IU//ul0z128fyvOsSzVMp8HQqdft957pWYS5h7kR0G7wBRRqgKgMjrpeDOF6Sbdy+FpoxDhf44bvO5zSSH1g9P5tOx3hY41m4P9PYZu7C9htQIf+mzx+3ehGrP4jsyERR1NdvClH3WoKskAqioqyi5aFbvlutRoQIrIQPnDH36sI9QqeHidicLBA/+ucoZzXKzpY792N/wZuFMFrr6oF7io6knhFFi1INN7JGSteclmpx1oHF6camGwH9il0tgJ7UVsIhPUWVJmNJmWn/MLZXL/EOI71/kfZZ2+mRUdTDSlu56wt9q/ceVG+kIwMTZrLzkmQQq0T25A/Ahi3AOEVkgOjIUpAJw6e8TTa66Sqo0BOAiyHzHxQfxzIbGIIOIV48PGcmT3E85ZgY1QYtzuXtKCs17Ls/8JWRYl5jw3/aExRQMq8gM5Vpp0bx2DlJYQTXxcIjcQwgNtj226Kq/wBa2l7VorX/GkLIaAq/7hFnALapgqonWPYrg4EaK4J15wLpmoK7eA7B23Mb6fRU7y9UmoSYQ62H+RVZUuy9QQ/4mIhappDy4ijmU28k0aSphkEueVMtyjaxffu1IlmVZeybZU6izKXFBBMLxm/WB4ww01V650szyiLlHYnc9qs9DO7jeGp7TjN+82EuuIa37v3XVv4krukZQuWiW9neIgZPXdE/Qk3lrh9DLyoKOqmmgs6OulfJbDeQxFvGpS7lpFHunAWcu1b6d4TEGHf6nx/j1elTc58NGc4Llc3McnZ6p2d3EXgf8S56cDptlQEV0oqO1eZUDnmEt3fJrwRP3t07XDTPXMvhLcv9gr7pySG4IYR7woMlGQb3H4eLwNMBgPf5pLTux+dNSx6rFBfyAQnvSnSFwlvVFsw=="
      LIGHTWEIGHT_OPENAI_API_KEY: "AgAkLvoddC+9dtmttJir2ktx8C0skjsye75d/flRXjPpY2L6To5ZvpJ17BqA20X95QqPYdjEXvFVhuGD2ttrieEAId3jo4gHl5w8+J8NnToiXyUYb6OcTaLugXa7PqO035jjyFe0Xq+e01nKwYeD/8ibYZ+kDe66/9TgqeZDn5MRJk+tXF7vxbpBhR+8V6/s9cS1G/hfQMCoqPtSBMj6Nim0ybI6EVE9J+K7BzOIZ4fzSCWFPRxyCnjRfbyRH5dcatWynH+zNqErsDeUcpueZs1MkbpYQ/e69MOkX3npSazGV7U+zTDw0RfAWMUW/NjvE05Dk9V/CLKRgotThijsf8sUmE/2NZWysD9iAhiomNfp1GDZciLjjKu+zlDJzOLkuyxsBREVChHH49OzBczYiTTahucJBisRgl8Q58/1l8NDVBuXsqmE3gvGzFnaURCvWuZS+RI6kGav+t9JMK9AflLR5DLh8E7X9gMB/o4LDRb6CSZUuHd39tnK/dzwxSbqXpaqefvx/Ne/kLbM3xFUNpHFYizVv7sfE4Spci1XM5Gb1LxZIAVif4jPkMX8M9rrAlcqesTxHzneISq44B83v41BPMBTMnplurk+UlbV/79ADg8iv0nH3PXiB9P7KA0R/Q4mZ95h3pG/TSpcLTyp9DcymAL/ClwNJ4UpIbPt3xEOwWQCsYOTor189SWzUJvpPYJvhPLla4zeqaQzy6MUdcvSitpVN5I8GGxz9VourNQO4z2ycc0jDgkXtEV0/Zl1jVaTVRKfs1DWbJ4G3rvQ9HbLGiTko+t6VWt8fCBl6KTbfrP09K2F41OmsWAd3OuqsHi/fam4ayn9a2msbkKv9gA9bLWgjp9fFNrxgU6Ss82y8Z1W+pezpMCqsV+VmahPv4ErMPZJV1BNuFJHqNiYWXvUP/7kIg=="
      HIGH_PERFORMANCE_OPENAI_API_KEY: "AgCck22V6AMlI++8EKjve1qzTJgw+hu3+od7vcsgoJ+8Awr46dsm+HwIh9aFsXC45Y/o/iHW6vZoEgrFkAj4Wm2z3Q6Z8jSJGMeR2T6bNsyQ7wwto38Hkvj1yooWcp5aU/npNyf/k8vKeUyAe4dTLW0edChgf7wPtSVpbySETeJQgmSP1fVE3csH9YRQjJFP2zx1MRYHcLPklrrVf5p9r4QdnKdRBpDDn72F5Z7ezHW2LNK5a0uumyB/fWRFBgjWEJaQP3pV5Ut1joMMYlFXZyOk8lRGctF3aSHCX3oGBcNszWhKUIiHH0b4vYnVhYxUMTnhq3YdthfyGDJV2dmHOPe+0JT/vJXHgZ2IbxHYVDSizwOqN2ngRITUnk5OB5xrSTZ8BLtJ/goIwBuIm6eLf9Wc0a49bYMQjv/LQws4xftGVPwHWDwY0UxyCNKNTnxAi96aM0hbd6BX7Kj7WDvofG8S3sWyatp92w3SS1gA4OSFKey48EzpVGSiPHe31nw2Ew9QkY2KUsI0N5iYqtuh/YzxQ1SjXK1lTWNVrnS2oWL3GFSPzy1c0FIn/GnUwT95FUy3mOeTPQq2E8cCaSQAQRjY4W1g3JPOfFwNts+reXz9Btq7wG65zwb2DPexXQKFB67KSivJQhAgWGI36aaofMF8QrdRNEJZWMFgbgrdifzbvdi8FJbsAA4NZETJphK2JPQWUgROjh0bFOeKAax3U1GQxZzalqXEJQlc/EASILouI9bHKNaFL+DpxILRhvQYShDp5dv8ccvV6N2vaBlN+so/oLIklGKoqpDTQbnjE6/+lz+q+OwdwzQclVcPb9jVqdp+12ig9suKZnAbWFiz+6zaNGqZiN/Wocbe7LiW2DZ/0tXbKB+QBFSkIeUnOSqJ6jqa+NSYF7SX0JkJq9gsQs+HYLVtug=="
      S3_ACCESS_KEY: "AgB7j76PQeBJ+yd6nmov2fdb1EqJgpaEKZQy4fusSmWEgHvhQFwG5jEcLiDQtJMrKg/4Xxjx6hage0MjzYi5PXtN9Jb3k46QbWQcnbuEd2qiDD5boKxgbx4S61tHY+Hnx4SgWo38Sq+UR+MhgyoOfxSClDgOk202dAwl+iKNRcU/3TxhUrm/TRH92nzjxmjeFUmJL8ygwwh7z6loaCri75GSFq5OYLgP8KwTN0rguhewnAMid0kCdVmTkhR2MfSrmM+K04vWjZVtGdzQ2K6OVGBOzpnnSup3UlyeDlrq1flWgw1WEHd1EkUp5NqpIWHJWbYmdB7VV+PL+T7JIYCkb7E/VzghnGDJ3cCUYRXdpG824jZcw8biM52R+V5zPbA9ApnhAt3tsFw++nf1K3VLsnjXqb/PR7KgEffjiCm4qM8tf7HVPR/B3lbR0M/TATp9KzkxBaQie+51Wvkn1N5RdEih8fAuzNIWtLIa4vmVfB0CWZjIlDjFM/24gSj02vMn70FY7La4Y/OPsmgdhNq3/6AnLsKWKLvheiw/vcQxU952a2jwaI7Ad2xGAddMraqFyN3N8/x4SGViHr9Obv02rGJFNDZ8BRJAHsNws5wAnEdHdLrpIQCFDy3c3TXPnjk9VQcWxHvBZX8Kn1qYAYTYIS1OMPAc9RelirakRpPLAYN8pCxM360yl6FmizzplCvEZ9d06hI/0rDCdOlKw5CwPFLnWkNTTA=="
      S3_SECRET_KEY: "AgAn5NIX+ZBSBLMTCHbmhrLxTSr52RnTk2bEQN5Huyx9+Tth76Fw7kr1EbOr9Vk+Q9LaovqEj6Zb1JidyU97MEbHdJDetakHlcOCJvr9WGJmi3HnKfElxqnDZl73Wiyby+7PAf8mkFX4tPM81s/PNJkrJ2S4+wjd5RmTZ5NRn3qhSImuupuU8ihbvYKogZBxZBu6oThueQs9lkEAxUK6KRO7eynxag3tyR8qigCwuRiSxn6jmaNzOCvcUw+7WYSsAUw4zIXW7gZ6vI8u5UA5D4Tm6A1gjNaEW0mffOv+6PWNF4IYRE66LdbJZCufRambs9A+v46ajUpn76Rft8zk2xzVo1A5yo4D4cBgnpcR1FmTFfTinoMUHaeBrzKkkhbgdn0AA/PTNC7u9IjuwdvVPK6S5bYb7my3gnO4b3jzkHfpVoHum9ZdFLGC/e8sldTInuKXsBWYGxtYnOT4H4tYGuDb+Z+uWR1U0jWBWHxyjoDDbVXLYnqyTvJlkZ+6GGzEl5CES2CWcW4BK50P/BBY9c1y4jAWQt6MeOUL2L/ZNvaH6nXvossANuP/8tqlyn0J7yixvBEyrjzd2vbThPdjEWDQungi6gS6f0GWt7r2JINp8WxzE0P4iO21rTXLXXifXevHtas8j84fDQ38UWMlRGiPRPRgARBB+bNnefrM/bxZ19LxAaSRjn0XpqCsgSbwUbJfnsI9Xo2NAUtXbtYr7o50WZvXKyV0eKI5wsUaWEkSKl0eDiZNpuMn"

  classifier:
    enabled: true
    name: classifier
    image:
      repository: eum-classifier
      tag: latest
      pullPolicy: IfNotPresent
    port: 8000
    replicas: 1
    resources:
      requests:
        memory: "256Mi"
        cpu: "125m"
      limits:
        memory: "512Mi"
        cpu: "250m"
    env:
      APP_NAME: "classifier"
      PORT: "8000"
    secrets: {}

  agentic:
    enabled: true
    name: agentic
    image:
      repository: eum-agentic
      tag: latest
      pullPolicy: IfNotPresent
    port: 8000
    replicas: 1
    resources:
      requests:
        memory: "256Mi"
        cpu: "125m"
      limits:
        memory: "512Mi"
        cpu: "250m"
    env:
      APP_NAME: "agentic"
      PORT: "8000"
    secrets: {}

  chatbot:
    enabled: true
    name: chatbot
    image:
      repository: eum-chatbot
      tag: latest
      pullPolicy: IfNotPresent
    port: 8000
    replicas: 1
    resources:
      requests:
        memory: "256Mi"
        cpu: "125m"
      limits:
        memory: "512Mi"
        cpu: "250m"
    env:
      APP_NAME: "chatbot"
      PORT: "8000"
    secrets: {}

# Service configuration
service:
  type: ClusterIP
  port: 8000

# Sealed Secrets configuration (for existing sealed secrets)
sealedSecrets:
  enabled: true
